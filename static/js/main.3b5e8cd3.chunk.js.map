{"version":3,"sources":["components/Button/Button.module.css","pages/PostsPage/PostsPage.module.css","components/Header/Header.module.css","components/Modal/Modal.module.css","components/PostItem/PostItem.module.css","redux/postsReduser.js","redux/store.js","redux/postsOperations.js","components/Header/Header.js","components/Modal/Modal.js","components/PostItem/PostItem.js","components/Button/Button.js","pages/PostsPage/PostsPage.js","App.tsx","index.tsx"],"names":["module","exports","postsSlice","createSlice","name","initialState","items","item","isLoading","reducers","getPosts","state","payload","result","getItemInfo","itemData","setIsLoading","resetIsLoading","middleware","getDefaultMiddleware","serializableCheck","rootReducer","reducer","store","configureStore","url","Header","className","styles","header","headerText","useStyles","makeStyles","paper","position","top","left","width","outline","color","padding","backgroundColor","display","flexDirection","alignItems","list","SimpleModal","open","handleClose","selectedItem","classes","body","obj","key","push","listMaker","Modal","onClose","PostItem","useState","setOpen","useSelector","posts","dispatch","useDispatch","id","onClick","e","currentTarget","getState","a","actions","axios","get","data","console","log","title","slice","suffics","Button","quontity","btnHandler","showMore","type","btn","btnTitle","digit","fontSize","override","css","PostPage","setShowMore","useEffect","postsArray","container","style","zIndex","size","loading","postsList","map","idx","length","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b5e8cd3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__30oem\",\"btnTitle\":\"Button_btnTitle__1REox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PostsPage_container__wh3WQ\",\"postsList\":\"PostsPage_postsList__1j89x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__cqyyi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"key\":\"Modal_key__3854E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"PostItem_item__2t0NX\"};","import { createSlice } from '@reduxjs/toolkit';\n\nconst state = {\n  items: [],\n  item: {},\n  isLoading: false,\n};\n\nexport const postsSlice = createSlice({\n  name: 'posts',\n  initialState: state,\n  reducers: {\n    getPosts: (state, { payload }) => ({\n      ...state,\n      items: [...payload.result],\n    }),\n    getItemInfo: (state, { payload }) => ({\n      ...state,\n      item: payload.itemData,\n    }),\n    setIsLoading: (state, { payload }) => ({\n      ...state,\n      isLoading: true,\n    }),\n    resetIsLoading: (state, { payload }) => ({\n      ...state,\n      isLoading: false,\n    }),\n  },\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n\nimport { postsSlice } from './postsReduser';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: false,\n  }),\n];\n\nconst rootReducer = {\n  [postsSlice.name]: postsSlice.reducer,\n};\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware,\n});\n","import axios from 'axios';\nimport { postsSlice } from './postsReduser';\n\nconst url = 'https://jsonplaceholder.typicode.com/posts';\n\nconst getPosts = () => async (dispatch, getState) => {\n  dispatch(postsSlice.actions.setIsLoading());\n  try {\n    const postsArray = await axios.get(url);\n    const result = [...postsArray.data];\n    // console.log('From Operations !!! : result: ', result);\n    dispatch(postsSlice.actions.getPosts({ result }));\n  } catch (err) {\n    console.log('getPosts error', err);\n  }\n  dispatch(postsSlice.actions.resetIsLoading());\n};\n\nconst getItemInfo = id => async (dispatch, getState) => {\n  dispatch(postsSlice.actions.setIsLoading());\n  // console.log('From Operations !!! : id: ', id);\n  try {\n    const result = await axios.get(url + `/${id}`);\n    const itemData = result.data;\n    // console.log('From Operations !!! : item.data: ', result.data);\n    dispatch(postsSlice.actions.getItemInfo({ itemData }));\n  } catch (err) {\n    console.log('getItemInfo error', err);\n  }\n  dispatch(postsSlice.actions.resetIsLoading());\n};\n\nexport { getPosts, getItemInfo };\n","import React from 'react';\nimport styles from './Header.module.css';\n\nexport default function Header() {\n  return (\n    <div className={styles.header}>\n      <span className={styles.headerText}>Test task #2</span>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport styles from './Modal.module.css';\n\nconst useStyles = makeStyles(() => ({\n  paper: {\n    position: 'absolute',\n    top: '20%',\n    left: '10vw',\n    width: '80vw',\n    outline: 'none',\n    color: '#ccc',\n    padding: 16,\n    backgroundColor: 'black',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  list: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n\nexport default function SimpleModal({ open, handleClose, selectedItem }) {\n  const classes = useStyles();\n\n  const listMaker = obj => {\n    let list = [];\n    for (const key in obj) {\n      list.push(\n        <li key={key}>\n          <span className={styles.key}>{key}</span>: {obj[key]}\n        </li>,\n      );\n    }\n    return list;\n  };\n\n  const body = (\n    <div className={classes.paper}>\n      <h2>Item info</h2>\n      <ul className={classes.list}>{listMaker(selectedItem)}</ul>\n    </div>\n  );\n\n  return (\n    <div>\n      <Modal open={open} onClose={handleClose}>\n        {body}\n      </Modal>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getItemInfo } from '../../redux/postsOperations';\nimport SimpleModal from '../Modal/Modal';\nimport styles from './PostItem.module.css';\n\nexport default function PostItem({ item }) {\n  const [open, setOpen] = useState(false);\n  const selectedItem = useSelector(state => state.posts.item);\n  const dispatch = useDispatch();\n\n  const itemClickHandler = e => {\n    const id = e.currentTarget.id;\n    dispatch(getItemInfo(id));\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <SimpleModal\n        open={open}\n        handleClose={handleClose}\n        selectedItem={selectedItem}\n      />\n      <li className={styles.item} id={item.id} onClick={itemClickHandler}>\n        <p>\n          <span>Title:</span> {item.title}\n        </p>\n        <p>\n          <span>Body:</span> {item.body}\n        </p>\n        <p>\n          <span>15 simbols:</span> {item.body.slice(0, 15)}\n        </p>\n      </li>\n    </>\n  );\n}\n","import React from 'react';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport styles from './Button.module.css';\n\nconst suffics = [\n  'постов',\n  'пост',\n  'поста',\n  'поста',\n  'поста',\n  'постов',\n  'постов',\n  'постов',\n  'постов',\n  'постов',\n];\n\nexport default function Button({ quontity, btnHandler, showMore }) {\n  const btnText = digit => `Еще ${digit} ${suffics[digit % 10]} `;\n\n  const btnTitle = () =>\n    showMore ? (\n      <>\n        <span className={styles.btnTitle}>{btnText(quontity)} </span>\n        <ExpandMoreIcon fontSize=\"large\"></ExpandMoreIcon>\n      </>\n    ) : (\n      <>\n        <span className={styles.btnTitle}>Показать первые </span>\n        <ExpandLessIcon fontSize=\"large\"></ExpandLessIcon>\n      </>\n    );\n\n  return (\n    <button type=\"button\" className={styles.btn} onClick={btnHandler}>\n      {btnTitle()}\n    </button>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport CircleLoader from 'react-spinners/CircleLoader';\nimport { css } from '@emotion/core';\nimport { getPosts } from '../../redux/postsOperations';\nimport styles from './PostsPage.module.css';\nimport Header from '../../components/Header/Header';\nimport PostItem from '../../components/PostItem/PostItem';\nimport Button from '../../components/Button/Button';\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n`;\n\nconst FIRST_POST = 3;\n\nexport default function PostPage() {\n  const [showMore, setShowMore] = useState(true);\n  const isLoading = useSelector(state => state.posts.isLoading);\n  const items = useSelector(state => state.posts.items);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [dispatch]);\n\n  const btnHandler = () => {\n    setShowMore(!showMore);\n  };\n\n  return (\n    <div className={styles.container}>\n      <Header />\n      {isLoading && (\n        <div\n          style={{\n            position: 'absolute',\n            top: '20%',\n            left: '10%',\n            zIndex: '990',\n          }}\n        >\n          <CircleLoader\n            size={300}\n            color={'#006cff'}\n            css={override}\n            loading={isLoading}\n          />\n        </div>\n      )}\n\n      <ul className={styles.postsList}>\n        {items &&\n          items.map((item, idx) => {\n            if (showMore) {\n              return idx < FIRST_POST ? (\n                <PostItem item={item} key={item.id} />\n              ) : null;\n            } else {\n              return <PostItem item={item} key={item.id} />;\n            }\n          })}\n      </ul>\n      <Button\n        quontity={items.length - FIRST_POST}\n        showMore={showMore}\n        btnHandler={btnHandler}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport PostsPage from './pages/PostsPage/PostsPage';\nimport './styles/App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PostsPage />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}